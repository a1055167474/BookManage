<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.SpringProjectDemo.dao.SessionDao">

    <resultMap id="BaseResultMap" type="com.example.SpringProjectDemo.entity.Session">
        <!--@Table session-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="sessionId" column="session_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, session_id, user_id, create_time
        from t_session
        where id = #{id}
        and state = 0
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_session(session_id, user_id, create_time, state)
        values (#{sessionId}, #{userId}, #{createTime}, #{state})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_session
        <set>
            <if test="sessionId != null and sessionId != ''">
                session_id = #{sessionId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_session where id = #{id}
    </delete>

    <delete id="deleteBySessionId">
        delete from t_session
        where session_id = #{sessionId}
    </delete>

    <select id="queryByUserId" resultMap="BaseResultMap">
        select
        id, session_id, user_id, create_time, state
        from t_session
        where user_id = #{userId}
        and state = 0
    </select>
    <select id="selectBySessionId" resultType="com.example.SpringProjectDemo.entity.Session">
        select
        id, session_id, user_id, create_time, state
        from t_session
        where session_id=#{sessionId}
        and state = 0
    </select>
    <select id="selectAllInvalid" resultType="com.example.SpringProjectDemo.entity.Session">
        select id, session_id, user_id, create_time, state
        from t_session
        where state = 0
    </select>

    <update id="updateBySessionId">
        update t_session
        set state = #{state}
        where session_id = #{sessionId}
        and state = 0
    </update>
    <update id="updateByIds">
        update t_session
        set state = 1
        where id in
        <foreach collection="ids" separator="," open="(" item="item" index="index" close=")">
            #{item}
        </foreach>
    </update>

</mapper>