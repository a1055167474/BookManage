<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.SpringProjectDemo.dao.BorrowReturnDao">

    <resultMap id="BaseResultMap" type="com.example.SpringProjectDemo.entity.BorrowReturn">
        <!--@Table borrow_return-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="bookId" column="book_id" jdbcType="INTEGER"/>
        <result property="amount" column="amount" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="returnTime" column="return_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, user_id, book_id, amount, create_time, state, return_time, is_deleted
        from t_borrow_return
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, user_id, book_id, amount, create_time, state, return_time
        from t_borrow_return
        where is_deleted = 0
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultType="com.example.SpringProjectDemo.entity.vo.BorrowReturnVo">
        select
        br.id,
        br.user_id as userId,
        br.book_id as bookId,
        br.amount as amount,
        br.create_time as createTime,
        br.state as state,
        br.return_time as returnTime,
        b.name as bookName,
        b.author as bookAuthor,
        u.name as userName,
        u.phone as phone
        from t_borrow_return br
        left join t_book b on b.id = br.book_id
        left join t_user u on u.id = br.user_id
        <where>
            <if test="id != null">
                and br.id = #{id}
            </if>
            <if test="userId != null">
                and br.user_id = #{userId}
            </if>
            <if test="bookId != null">
                and br.book_id = #{bookId}
            </if>
            <if test="amount != null">
                and br.amount = #{amount}
            </if>
            <if test="createTime != null">
                and br.create_time = #{createTime}
            </if>
            <if test="state != null">
                and br.state = #{state}
            </if>
            <if test="returnTime != null">
                and br.return_time = #{returnTime}
            </if>
            <if test="bookName != null">
                and b.name LIKE CONCAT('%',#{bookName},'%')
            </if>
            <if test="bookAuthor != null">
                and b.author LIKE CONCAT('%',#{bookAuthor},'%')
            </if>
            <if test="userName != null">
                and u.name LIKE CONCAT('%',#{userName},'%')
            </if>
            <if test="phone != null">
                and u.phone LIKE CONCAT('%',#{phone},'%')
            </if>
            and br.is_deleted = 0
        </where>
        order by br.create_time desc
        limit #{start}, #{size}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_borrow_return(user_id, book_id, amount, create_time, state, return_time,is_deleted)
        values (#{userId}, #{bookId}, #{amount}, #{createTime}, #{state}, #{returnTime}, #{isDeleted})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_borrow_return
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="bookId != null">
                book_id = #{bookId},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="returnTime != null">
                return_time = #{returnTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_borrow_return where id = #{id}
    </delete>

    <select id="selectByUserId" resultType="com.example.SpringProjectDemo.entity.BorrowReturn">
        select id, user_id, book_id, amount, create_time, state, return_time
        from t_borrow_return
        where user_id = #{userId}
        and state = 0
        and is_deleted = 0
    </select>

    <select id="selectByUserId2" resultType="com.example.SpringProjectDemo.entity.BorrowReturn">
        select id, user_id, book_id, amount, create_time, state, return_time
        from t_borrow_return
        where user_id = #{userId}
          and state in (0,2)
          and is_deleted = 0
    </select>

    <select id="queryTotal" resultType="java.lang.Integer">
        select
        count(*)
        from t_borrow_return br
        left join t_book b on b.id = br.book_id
        left join t_user u on u.id = br.user_id
        <where>
            <if test="id != null">
                and br.id = #{id}
            </if>
            <if test="userId != null">
                and br.user_id = #{userId}
            </if>
            <if test="bookId != null">
                and br.book_id = #{bookId}
            </if>
            <if test="amount != null">
                and br.amount = #{amount}
            </if>
            <if test="createTime != null">
                and br.create_time = #{createTime}
            </if>
            <if test="state != null">
                and br.state = #{state}
            </if>
            <if test="returnTime != null">
                and br.return_time = #{returnTime}
            </if>
            <if test="bookName != null">
                and b.name LIKE CONCAT('%',#{bookName},'%')
            </if>
            <if test="bookAuthor != null">
                and b.author LIKE CONCAT('%',#{bookAuthor},'%')
            </if>
            <if test="userName != null">
                and u.name LIKE CONCAT('%',#{userName},'%')
            </if>
            <if test="phone != null">
                and u.phone LIKE CONCAT('%',#{phone},'%')
            </if>
            and br.is_deleted = 0
        </where>
    </select>
    <select id="getLostReportList" resultType="com.example.SpringProjectDemo.entity.vo.BorrowReturnVo">
        select
        br.id,
        br.user_id as userId,
        br.book_id as bookId,
        br.amount as amount,
        br.create_time as createTime,
        br.state as state,
        br.return_time as returnTime,
        b.name as bookName,
        b.author as bookAuthor,
        u.name as userName,
        u.phone as phone,
        br.is_deleted as isDeleted
        from t_borrow_return br
        left join t_book b on b.id = br.book_id
        left join t_user u on u.id = br.user_id
        where br.state = 2
          and br.is_deleted = 0
         <if test="id != null">
             and br.id = #{id}
         </if>
         <if test="userId != null">
             and br.user_id = #{userId}
         </if>
         <if test="bookId != null">
             and br.book_id = #{bookId}
         </if>
         <if test="amount != null">
             and br.amount = #{amount}
         </if>
         <if test="createTime != null">
             and br.create_time = #{createTime}
         </if>
         <if test="state != null">
             and br.state = #{state}
         </if>
         <if test="returnTime != null">
             and br.return_time = #{returnTime}
         </if>
         <if test="bookName != null">
             and b.name LIKE CONCAT('%',#{bookName},'%')
         </if>
         <if test="bookAuthor != null">
             and b.author LIKE CONCAT('%',#{bookAuthor},'%')
         </if>
         <if test="userName != null">
             and u.name LIKE CONCAT('%',#{userName},'%')
         </if>
         <if test="phone != null">
             and u.phone LIKE CONCAT('%',#{phone},'%')
         </if>
        limit #{start}, #{size}
    </select>
    <select id="getLostReportTotal" resultType="java.lang.Integer">
        select
            count(*)
        from t_borrow_return
        where state = 2
        and is_deleted = 0
    </select>

</mapper>